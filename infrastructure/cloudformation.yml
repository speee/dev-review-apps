AWSTemplateFormatVersion: 2010-09-09
Description: build template of Revieee
Resources:
  RevieeeVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.100.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
  RevieeeAppSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RevieeeVPC
      CidrBlock: 10.100.0.0/26
      MapPublicIpOnLaunch: true
  ContainerInstanceSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RevieeeVPC
      CidrBlock: 10.100.10.0/24
      MapPublicIpOnLaunch: true

  RevieeeIGW:
    Type: AWS::EC2::InternetGateway
  AttachIGWtoVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref RevieeeIGW
      VpcId: !Ref RevieeeVPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RevieeeVPC
  RouteAddInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref RevieeeIGW
      RouteTableId: !Ref PublicRouteTable
  AssociateAppSubnetToPublicRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref RevieeeAppSubnet
  AssociateContainerInstanceSubnetToPublicRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref ContainerInstanceSubnet

  RevieeeAppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref RevieeeVPC
      GroupName: !Sub "${AWS::StackName}-RevieeeAppServerSecurityGroup"
      GroupDescription: "Security Group for Revieee App Server"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: !Ref SSHPort
          ToPort: !Ref SSHPort
          CidrIp: !Ref AcceptCidrIp
  ContainerInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref RevieeeVPC
      GroupName: !Sub "${AWS::StackName}-RevieeeContainerInstanceSecurityGroup"
      GroupDescription: "Security Group for Revieee Container Instance"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 32768
          ToPort: 61000
          SourceSecurityGroupId: !Ref RevieeeAppServerSecurityGroup
        - IpProtocol: tcp
          FromPort: !Ref SSHPort
          ToPort: !Ref SSHPort
          CidrIp: !Ref AcceptCidrIp

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-RevieeeCluster"
  EcsSpotFleetRequest:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt FleetIAMRole.Arn
        SpotPrice: !Ref SpotPrice
        TargetCapacity: !Ref TargetCapacity
        LaunchSpecifications:
          - InstanceType: !Ref ContainerInstanceType
            ImageId: !Ref ContainerInstanceImageId
            IamInstanceProfile:
              Arn: !GetAtt EcsClusterInstanceIAMInstanceProfile.Arn
            SubnetId: !Ref ContainerInstanceSubnet
            SecurityGroups:
              - GroupId: !Ref ContainerInstanceSecurityGroup
            UserData:
              Fn::Base64: !Sub |
                #!/bin/bash
                echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config
  FleetIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - spotfleet.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole"
  EcsClusterInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
  EcsClusterInstanceIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsClusterInstanceIAMRole

  EndpointInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EndpointInstanceImageId
      InstanceType: t2.micro
      IamInstanceProfile: !Ref EndpointInstanceIAMInstanceProfile
      KeyName: !If [ SSHKeySpecified, !Ref SSHKey, !Ref "AWS::NoValue" ]
      SecurityGroupIds:
        - !GetAtt RevieeeAppServerSecurityGroup.GroupId
      SubnetId: !Ref RevieeeAppSubnet
  EndpointEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EndpointInstance
  EndpointInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
  EndpointInstanceIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EndpointInstanceIAMRole

Parameters:
  SSHPort:
    Default: 22
    Type: Number
  SSHKey:
    Default: ""
    Type: String
  AcceptCidrIp:
    Type: String
    AllowedPattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$"
    Description: "The cidr block allow access to Revieee"
  SpotPrice:
    Default: 0.124
    Type: Number
  TargetCapacity:
    Default: 2
    Type: Number
  ContainerInstanceType:
    Default: m5.large
    Type: String
  ContainerInstanceImageId:
    Default: ami-f3f8098c
    Type: AWS::EC2::Image::Id
  EndpointInstanceImageId:
    Default: ami-ceafcba8
    Type: AWS::EC2::Image::Id

Conditions:
  SSHKeySpecified:
    !Not [ !Equals [ !Ref SSHKey, "" ] ]

Outputs:
  EcsClusterName:
    Value: !Ref EcsCluster
  EndpointInstanceIp:
    Value: !GetAtt EndpointInstance.PublicIp
